.TH solmex 8 "2025-03-23"

.SH "NAME"
solmex \- a metrics exporter for Solaris

.SH "SYNOPSIS"
.nh
.na
.HP
.B solmex
[\fB\-LSVcdfh\fR]
[\fB\-l\ \fIfile\fR]
[\fB\-n\ \fIlist\fR]
[\fB\-p\ \fIport\fR]
[\fB\-s\ \fIip\fR]
[\fB\-v\ DEBUG\fR|\fBINFO\fR|\fBWARN\fR|\fBERROR\fR|\fBFATAL\fR]
[\fB\-x\ \fImetric_regex\fR]
[\fB\-X\ \fIstats_regex\fR]
[\fB\-i\ \fImetric_regex\fR]
[\fB\-I\ \fIstats_regex\fR]
.ad
.hy

.SH "DESCRIPTION"
.B solmex
is a \fBm\fRetrics \fBex\fRporter for the Solaris operating system (OS).
The collected data can be exposed via HTTP in the Prometheus exposition
format [1], for example, using the default endpoint URL
\fBhttp://\fIhostname\fB:\fI9290\fB/metrics\fR. This data can then be
visualized using tools like Grafana [2], Netdata [3], or Zabbix [4].

In contrast to Prometheus' node_exporter, \fBsolmex\fR is written in plain C
having the KISS (Keep It Small and Simple) principle in mind. As a result,
it is extremely lightweight and has no dependencies beyond libprom,
libmicrohttpd, and basic standard OS libraries. It is essentially a
standalone tool that efficiently handles Solaris kernel statistics. While
running \fBsolmex\fR with root privileges should be safe, it is recommended
to run \fBsolmex\fR as a normal, unprivileged user whenever possible.

\fBsolmex\fR operates in three modes:

.RS 2
.IP \fBdefault\fR 2
In this mode, \fBsolmex\fR collects all data as it would for a /metrics
HTTP request, prints it to the standard output, and then exits.
.IP \fBforeground\fR
This mode starts the internal HTTP server to respond to HTTP requests,
while remaining attached to the console or terminal (i.e., standard input,
output, and error). Use the \fB-f\fR option to select this mode.
.IP \fBdaemon\fR
This mode also starts the internal HTTP server as a daemon in the background
using a fork-exec model. It operates in a new session, detaches from the
console or terminal, and redirects standard input, output, and error
to /dev/null. It exits with an exit code of \fB0\fR if the daemon starts
successfully. Note that if no logfile is specified, all messages from the
daemon will be discarded. Use the \fB-d\fR option to select this mode.
.RE

\fBsolmex\fR processes one HTTP request at a time to minimize system and
device resource usage. Therefore it is advised to adjust firewalls and/or
HTTP proxies accordingly. For SSL or authentication needs, a proxy server
like nginx can be used, as \fBsolmex\fR is designed to remain as small
and simple as possible.

When running in \fBforeground\fR or \fBdaemon\fR mode, \fBsolmex\fR returns,
by default, the duration of the following data collection and formatting tasks:
.RS 2
.TP 2
.B default
Tasks related to HTTP operations.
.TP
.B process
Tasks related to the \fBsolmex\fR process itself.
.TP
.B node
Tasks concerning the OS/kernel statistics.
.TP
.B libprom
The time taken to collect and format the data from all other collectors
mentioned above in the Prometheus format.
.RE

.SH "OPTIONS"
.P
The following options are supported, with the corresponding kstat instances
indicated in bold text within parentheses

.TP
.B \-A
.PD 0
.TP
.B \-\-no\-loadaverage
Disable all \fBsolmex_node_load\fI*\fR metrics (\fBunix:0:system_misc\fR) -
system load averages and memory deficit.

.TP
.B \-B
.PD 0
.TP
.B \-\-no\-boottime
Disable the \fBsolmex_node_boot_time_seconds\fR metric. It gets determined only
once and is therefore very cheap.

.TP
.B \-C
.PD 0
.TP
.B \-\-no\-clock\-freq\-max
Disable the \fBsolmex_node_cpu_frequency_max_hertz\fR metric (\fBcpu_info::\fR) -
CPU max. clock limit.

.TP
.B \-D
.PD 0
.TP
.B \-\-no\-dmi
Disable the \fBsolmex_node_dmi_info\fR metric - machine infos obtained from the
BIOS using the smbios lib. It gets constructed only once and has always the same
value, so very cheap.

.TP
.B \-F
.PD 0
.TP
.B \-\-no\-clock\-freq
Disable all \fBsolmex_node_cpu_frequency\fI*\fB_hertz\fR (\fBcpu_info::\fR) -
current and max. CPU clock values.

.TP
.B \-I
.PD 0
.TP
.B \-\-sysinfo\-mp
Enable system info metrics \fBsolmex_node_sys_\fI*\fR for each individual
CPU strand also known as thread. By default overall metrics (cpu="sum") are
emitted, only (\fBcpu::sys\fR).

.TP
.B \-K
.PD 0
.TP
.B \-\-no\-kstats
Disable all metrics obtaining its data using the kernel's kstat framework.

.TP
.B \-L
.PD 0
.TP
.B \-\-no\-scrapetime
Disable the overall scrapetime metrics of the libprom collector, which
measure the time elapsed when scraping all the required data. To enable
this option, you must also disable the collection of scrapetimes for all
other collectors before this one gets honored. It can be particularly
useful for determining the optimal statistics query interval.

.TP
.B \-M
.PD 0
.TP
.B \-\-vmstat\-mp
Enable system paging/swapping metrics \fBsolmex_node_vm_\fI*\fR for each
individual CPU strand also known as thread. By default overall metrics
(cpu="sum") are emitted, only (\fBcpu::vm\fR).

.TP
.B \-O
.PD 0
.TP
.B \-\-no\-cpu\-state
Disable CPU online/offline metrics \fBsolmex_node_cpus_total\fR.

.TP
.B \-P
.PD 0
.TP
.B \-\-no\-cpu-info
Disable CPU package info metrics \fBsolmex_node_cpu_info\fR (\fBcpu_info::\fR).

.TP
.B \-Q
.PD 0
.TP
.B \-\-no\-procq
Disable process queue metrics \fBsolmex_node_procq_\fI*\fR (\fBunix:0:sysinfo\fR).
Note that the data provided by the kernel are in the form of Riemann sums.
Consequently, in daemon mode, the first sample is recorded to calculate the
difference for the subsequent query but does not emit a metric. In CLI mode,
\fBsolmex\fR waits approximately 1 second and performs the query a second time
to provide usable data. Refer to the NOTES section below for additional
information.

.TP
.B \-S
.PD 0
.TP
.B \-\-no\-scrapetime\-all
Disable recording the scrapetime for all collectors, i.e. \fBdefault\fR,
\fBprocess\fR, \fBnode\fR, and \fBlibprom\fR, as described above.

.TP
.BI \-T " list"
.PD 0
.TP
.BI \-\-nics= list
If collecting statistics for network interfaces (NICs) is enabled, this
option allows you to narrow down the set of NICs to monitor. The list is
a comma-separated series of regular expressions (regex). Each regex can be
prefixed with an exclude/include operator: one of the letters
\fBP\fR, \fBp\fR, \fBV\fR, \fBv\fR, \fBA\fR, or \fBa\fR, followed by a
colon (\fB:\fR). This operator applies to all subsequent regexes until
another regex with a different include/exclude operator is encountered.
Uppercase letters denote the \fBexclude\fR operation, while lowercase letters
denote the include operation. \fBP\fR and \fBp\fR are applied to
\fBphysical\fR NICs, \fBV\fR and \fBv\fR to \fBvirtual\fR NICs, while
\fBA\fR and \fBa\fR can be used for either type. If the first regex does not
have an include/exclude operator, the include operation is implied. If the
first regex indicates an include operation, the initial set contains no NICs;
otherwise, it contains all available NICs.

For example to include only virtual NICs, you can specify -T 'P:.*', what
makes sense if no physical NICs are used directly (e.g. if they are part of
an aggregation or accessed indirectly via virtual NICs). In such cases,
Solaris does not maintain any statistics for them, meaning all values except
{phys,link}_state will be zero and thus are basically useless.

.TP
.B \-U
.PD 0
.TP
.B \-\-no\-units
Disable all \fBsolmex_node_unit_\fI*\fR metrics. They get determined once and
are therefore very cheap. They are useful to let data visualizers like grafana
properly convert e.g. quantities in bytes into system pages or system ticks
into seconds and vice versa.

.TP
.B \-V
.PD 0
.TP
.B \-\-version
Print \fBsolmex\fR version info and exit.

.TP
.B \-W
.PD 0
.TP
.B \-\-no\-swap
Disable the swap related \fBsolmex_node_swap_\fI*\fR metrics (\fBunix::vminfo\fR).

.TP
.B \-Y
.PD 0
.TP
.B \-\-no\-mem
Disable system memory related \fBsolmex_node_mem_\fI*\fR metrics (\fBunix::system_pages\fR).

.TP
.B \-c
.PD 0
.TP
.B \-\-compact
According to the Prometheus exposition format [1], sending a \fBHELP\fR
and \fBTYPE\fR comment alias description for a metric is optional.
By using this option, they will be omitted from the HTTP response,
thus saving bandwidth and processing time.

.TP
.B \-d
.PD 0
.TP
.B \-\-daemon
Run \fBsolmex\fR in \fBdaemon\fR mode.

.TP
.B \-f
.PD 0
.TP
.B \-\-foreground
Run \fBsolmex\fR in \fBforeground\fR mode.

.TP
.B \-h
.PD 0
.TP
.B \-\-help
Print a short help summary to the standard output and exit.

.TP
.BI \-i " mode"
.PD 0
.TP
.BI \-\-sysinfo= mode
Specify which of the \fBsolmex_node_sys_\fI*\fR metrics to emit (\fBcpu::sys\fR).
Supported modes are: \fBnone\fR (0|n), \fBnormal\fR or \fBregular\fR (1|r),
\fBextended\fR (2|x), and \fBall\fR (3|a). By default, \fBnormal\fR is used,
and system overall metrics (cpu="sum") are calculated.
To enable CPU strand (also known as thread-wise) metrics, add the option \fB-I\fR.

.TP
.BI \-l " file"
.PD 0
.TP
.BI \-\-logfile= file
Log all messages to the given \fIfile\fR when the main process is running.

.TP
.BI \-n " list"
.PD 0
.TP
.BI \-\-no-metric= list
Skip all the metric collections given in the comma separated \fIlist\fR of
identifiers. Currently supported are:

.RS 4

.TP 4
.B version
All \fsolmex_version\fR metrics (default collector).
.TP 4
.B node
All \fBsolmex_node_*\fR metrics (node collector).
.TP 4
.B process
All \fBsolmex_process_*\fR metrics (process collector).

.RE

.TP
.BI \-m " mode"
.PD 0
.TP
.BI \-\-vmstats= mode
Specify which of the \fBsolmex_node_vm_\fI*\fR metrics to emit (\fBcpu::vm\fR).
Supported modes are: \fBnone\fR (0|n), \fBnormal\fR or \fBregular\fR (1|r),
\fBextended\fR (2|x), and \fBall\fR (3|a). By default, \fBnormal\fR is used,
and system overall metrics (cpu="sum") are calculated.
To enable CPU strand (also known as thread-wise) metrics, add the option \fB-M\fR.

.TP
.BI \-p " num"
.PD 0
.TP
.BI \-\-port= num
Bind to port \fInum\fR and listen for HTTP requests on that port. Note that
using a port below 1024 typically requires additional privileges. The
default port is 9100.

.TP
.BI \-s " IP"
.PD 0
.TP
.BI \-\-source= IP
Bind the HTTP server exclusively to the specified \fIIP\fR address.
By default, it binds to 0.0.0.0, which means it will listen on all
IP addresses configured on this host, or zone. To enable IPv6, specify
an IPv6 address here (\fB::\fR serves the same purpose for IPv6 as 0.0.0.0
does for IPv4).

.TP
.BI \-t " mode"
.PD 0
.TP
.BI \-\-nicstats= mode
Specify which of the \fBsolmex_node_net_\fI*\fR metrics to emit (\fB:0:link\fR
and \fBlink:0:\fR as fallback).
Supported modes are: \fBnone\fR (0|n), \fBnormal\fR or \fBregular\fR (1|r),
\fBextended\fR (2|x), and \fBall\fR (3|a). By default, \fBnormal\fR is used,
and metrics for every physical and virtual NIC are calculated.
To reduce the set of evaluated NICs use the option \fB-T\ ...\fR .

.TP
.BI \-v " level"
.PD 0
.TP
.BI \-\-verbosity= level
Set the message verbosity to the given \fIlevel\fR. Accepted tokens are
\fBDEBUG\fR, \fBINFO\fR, \fBWARN\fR, \fBERROR\fR, \fBFATAL\fR and for
convenience \fB1\fR..\fB5\fR respectively.

.SH "EXIT STATUS"
.TP 4
.B 0
on success.
.TP
.B 1
If an unexpected error occurred during the start (other problem).
.TP
.B 96
If an invalid option or option value got passed (config problem).
.TP
.B 100
If the logfile is not writable or port access is not allowed (permission problem).

.SH "ENVIRONMENT"

.TP 4
.B PROM_LOG_LEVEL
If no verbosity level is specified using the \fB-v \fI...\fR option,
this environment variable is checked for a verbosity value. If a valid
value is found, the verbosity level is set accordingly; otherwise, the
default level of \fBINFO\fR will be used.

.SH "FILES"
.TP 4
.B /dev/kstat
The character special devices used to fetch OS/kernel statistics.
.TP 4
.B /dev/kmem
The character special devices used to fetch memory related statistics.

.SH NOTES
The \fBsolmex_node_procq_\fI*\fR metrics are based on the kernel's
\fBunix::sysinfo\fR statistics. The related values are Riemann sums, and
therefore these metrics always represent an average over the time between
the current and the previous query. This means that if you make a \fBsolmex\fR
instance publicly available, you may sometimes get an average for the last
second and other times for the last 10 seconds, depending on your query
interval and the queries from other clients. If you want to record a consistent
value, start a separate Solex instance on a different port and ensure that
only your client can access it (e.g., by using a firewall).

There should be no problem running several instances in parallel as long as
your system resources (such as CPU and memory) can handle the load. However,
ensure that each instance is configured to listen on different ports to
avoid any network conflicts.

Since the kernel updates many metric-related values only once per second,
there is usually no benefit in selecting a shorter query interval for
continuous monitoring.

As usual, the best practice is to use a single client that queries the
intended collector(s) and stores the results in a time series database.
Other clients, such as grafana, should then query the time series database
only for their work. For example, we use a single VictoriaMetrics
\fBvmagent\fR [5] in each global zone to collect, normalize, and send metrics
to the VictoriaMetrics time series database (\fBvmdb\fR or
\fBvictoria-metrics-prod\fR [6][7]). In turn several \fBgrafana\fR [2]
instances are configured to query these databases to visualize data
in various charts and representations and therefore do not stress any
collector in the global zones or cause firewall headaches.

.SH "BUGS"
https://github.com/jelmd/solmex is the official source code repository
for \fBsolmex\fR.  If you need some new features, or metrics, or bug fixes,
please feel free to create an issue there using
https://github.com/jelmd/solmex/issues .

.SH "AUTHORS"
Jens Elkner

.SH "SEE ALSO"
[1]\ https://prometheus.io/docs/instrumenting/exposition_formats/
.br
[2]\ https://grafana.com/
.br
[3]\ https://www.netdata.cloud/
.br
[4]\ https://www.zabbix.com/
.br
[5]\ https://docs.victoriametrics.com/vmagent/
.br
[6]\ https://docs.victoriametrics.com/single-server-victoriametrics/
.br
[7]\ https://docs.victoriametrics.com/cluster-victoriametrics/
.\" # vim: ts=4 sw=4 filetype=nroff
