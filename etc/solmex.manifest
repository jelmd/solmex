<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<!--
	file: /lib/svc/manifest/application/management/solmex.xml

	To remove this service, use:
		rm -f /lib/svc/manifest/application/solmex.xml
		svcadm restart manifest-import
	To re-import and run, use:
		cp etc/solmex.xml /lib/svc/manifest/application/management/solmex.xml
		svcadm restart manifest-import
		svcadm enable solmex

	The solmex package does this on install/uninstall automatically.

    Copyright 2025 Jens Elkner.
-->

<service_bundle type='manifest' name='LNFsolmex:solmex'>

<service name='application/management/solmex' type='service' version='1'>

	<create_default_instance enabled="false" />

	<single_instance />

	<!-- Wait for network interfaces to be initialized so we can bind.  -->
	<dependency name='network' grouping='require_all' restart_on='refresh'
	    type='service'>
	    <service_fmri value='svc:/milestone/network:default'/>
	</dependency>

	<!-- Wait for all local filesystems to be mounted.  -->
	<dependency name='filesystem-local' grouping='require_all' restart_on='none'
	    type='service'>
	    <service_fmri value='svc:/system/filesystem/local:default'/>
	</dependency>

	<!-- Start solmex before vmagent (if there is one) -->
	<dependent name='vmagent' grouping='optional_all' restart_on='none'>
		<service_fmri value='svc:/application/database/vmagent'/>
	</dependent>

	<exec_method type='method' name='start'
		exec='/usr/sbin/solmex %{config/start_args} -d -l %{config/logfile} -p %{config/port}'
		timeout_seconds='10'>
		<method_context>
			<!-- Who knows, why one needs sysconfig privs to be able to
				query dcmi states. Someone had probably a bad day ....
				user='webservd' group='webservd' should be ok, too.
			-->
			<method_credential user='daemon' group='daemon'
				privileges='basic,sys_config,!proc_session,!proc_info,!file_link_any,{zone}:/var/log/solmex.log' />
		</method_context>
	</exec_method>

	<exec_method timeout_seconds='5' type='method' name='stop'
		exec=':kill -TERM' />

	<property_group name='config' type='application'>
		<stability value='Evolving' />
		<!-- Check operational state e.g. via http://localhost:9290/metrics -->
		<propval name='port' type='integer' value='9100' />
		<propval name='logfile' type='astring' value='/var/log/solmex.log' />
		<!-- Any options to pass verbatim to the agent. E.g.
			svccfg -s solmex:default setprop 'config/start_args = ( "-cn" "version" "-ix" "-mx" "-tx" "-FTP:.*" "-zthis:nfs4,zfs" )'
		-->
		<property name="start_args" type="astring">
			<astring_list>
				<value_node value='-c' />
			</astring_list>
		</property>
	</property_group>

	<property_group name='startd' type='framework'>
		<!-- service mode is contract -->
		<propval name='duration' type='astring' value='contract' />
		<!-- sub-process core dumps shouldn't restart session -->
		<propval name='ignore_error' type='astring' value='core,signal' />
	</property_group>

	<!--
		Add all users, which should be able to manage this service
		into /etc/user_attr . E.g.:
		echo 'jdoe::::auths=solaris.smf.manage.solmex' >>/etc/user_attr
	-->
	<property_group name='general' type='framework'>
		<propval name='action_authorization' type='astring'
			value='solaris.smf.manage.solmex' />
		<propval name='value_authorization' type='astring'
			value='solaris.smf.manage.solmex' />
	</property_group>

	<stability value='Evolving' />

	<template>
		<common_name>
			<loctext xml:lang='C'>
				solmex - a metrics exporter for the Solaris OS/kernel.
			</loctext>
		</common_name>
		<documentation>
			<manpage title='solmex' section='8' manpath='/usr/share/man' />
			<doc_link name='github' uri='https://github.com/jelmd/solmex' />
		</documentation>
	</template>
</service>

</service_bundle>
